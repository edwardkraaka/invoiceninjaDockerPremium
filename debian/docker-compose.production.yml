version: '3.8'

x-logging: &default-logging
  options:
    max-size: "10m"
    max-file: "3"
  driver: json-file

services:
  app:
    build:
      context: .
    image: invoiceninja/invoiceninja-debian:${TAG:-latest}
    restart: unless-stopped
    env_file:
      - ./.env.production
    ports:
      - "9000:9000"  # Expose PHP-FPM for NPM to connect
    volumes:
      - ./.env.production:/var/www/html/.env
      - ./mysql/client.cnf:/etc/mysql/conf.d/client.cnf:ro
      - app_public:/var/www/html/public
      - app_storage:/var/www/html/storage
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging: *default-logging

  mysql:
    image: mysql:8
    restart: unless-stopped
    env_file:
      - ./.env.production
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    # No ports exposed - internal only
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging

  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - app-network
    # No ports exposed - internal only
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    logging: *default-logging

networks:
  app-network:
    driver: bridge

volumes:
  app_public:
    driver: local
  app_storage:
    driver: local  
  mysql_data:
    driver: local
  redis_data:
    driver: local